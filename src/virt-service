#!/usr/bin/python3
# -*- coding: utf-8; tab-width: 4; indent-tabs-mode: t -*-

import os
import shutil
from gi.repository import GLib
from dbus.mainloop.glib import DBusGMainLoop
from virt_util import VirtUtil
from virt_param import VirtParam
from virt_dbus import DbusMainObject
from virt_host_network import VirtHostNetwork
from virt_network import VirtNetworkManager
from virt_vfiodev_manager import VirtVfioDeviceManager
from virt_dhcp_server import VirtDhcpServer
from virt_samba_server import VirtSambaServer


param = VirtParam()
dbusMainObject = None
try:
    # create main loop
    DBusGMainLoop(set_as_default=True)
    param.mainloop = GLib.MainLoop()

    try:
        # create temp directory
        VirtUtil.mkDirAndClear(param.tmpDir)

        # create management object
        param.hostNetwork = VirtHostNetwork()
        param.netManager = VirtNetworkManager(param)
        param.vfioDevManager = VirtVfioDeviceManager()
        param.dhcpServer = VirtDhcpServer(param)
        param.sambaServer = VirtSambaServer(param)
    except Exception as e:
        param.initError = e.message
        GLib.timeout_add_seconds(1, lambda *args: param.mainloop.quit())

    # create dbus root object
    dbusMainObject = DbusMainObject(param)

    # start main loop
    param.mainloop.run()
finally:
    if dbusMainObject is not None:
        dbusMainObject.release()
    if os.path.exists(param.tmpDir):
        shutil.rmtree(param.tmpDir)
